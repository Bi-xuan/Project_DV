---
title: "Employment in Luxembourg"
author: "Bixuan LIU"
date: "Feburary 25, 2024"
format:
  revealjs: 
    theme: sky
---

## Dataset

**Current Source**: [Eurostat](https://statistiques.public.lu/en.html)

**Original Source**: Data collected from the labor market

**Type**: Monthly (1995.01-2023.08)
```{r}
# Load libraries
library(openxlsx)
library(knitr)
library(kableExtra)

# Import Excel file data
df <- read.xlsx("data.xlsx")

# Rename columns
colnames(df) <- c("Date", "Resident borderers", "Non-resident borderers", "National wage-earners", "Domestic wage-earners", "National self-employment", "Domestic self-employment", "National employment", "Domestic employment", "Number of unemployed", "Active population")

# Convert date column to Date format
df$Date <- as.numeric(df$Date)
df$Date <- as.Date(df$Date, origin = "1899-12-30")

# Show first 10 rows
kable(df[1:5, 1:6], format = "html", caption = "First 5 Rows", row.names = FALSE) |>
  kable_styling("striped", full_width = FALSE) |>
  kable_styling(font_size = 15)
kable(df[1:5, 7:11], format = "html", row.names = FALSE) |>
  kable_styling("striped", full_width = FALSE) |>
  kable_styling(font_size = 15)
```

# A First Glance

## Correlations

```{r}
# Import libraries
library(ggplot2)
library(reshape2)

# Set the theme
theme_set(theme_bw( base_size = 15))

get_lower_tri<-function(cormat){
    cormat[upper.tri(cormat)] <- NA
    return(cormat)
  }

cormat <- round(cor(df[,-1]),2)    # Delete the DATE column
lower_tri <- get_lower_tri(cormat)
melted_cormat <- melt(lower_tri, na.rm = TRUE)

ggheatmap <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + 
  geom_tile(color = "white") + 
  scale_fill_gradient2(limits = c(0.8, 1), low = "white", mid = "yellow", high = "red", midpoint = 0.9) + 
  labs(x = NULL, y = NULL, fill = "Correlation")

ggheatmap + 
geom_text(aes(Var1, Var2, label = value), color = "black", size = 4) +
theme(
  axis.title.x = element_blank(),
  axis.title.y = element_blank(),
  panel.grid.major = element_blank(),
  panel.border = element_blank(),
  panel.background = element_blank(),
  axis.ticks = element_blank(),
  legend.justification = c(1, 0),
  legend.position = c(0.45, 0.70),
  legend.direction = "horizontal")+
  guides(fill = guide_colorbar(barwidth = 10, barheight = 1,
                title.position = "top", title.hjust = 0.5)) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Line Graph

[Interactive](http://127.0.0.1:4328)

```{r}
df_rs <- read.xlsx("data_reshaped.xlsx")

# Rename columns
colnames(df_rs) <- c("Category", "Date","Value")

# Convert date column to Date format
df_rs$Date <- as.numeric(df_rs$Date)
df_rs$Date <- as.Date(df_rs$Date, origin = "1899-12-30")
```

```{r}
library(dplyr)
library(ggrepel)
data_ends <- df_rs |> filter(Date == "2023-08-01")

ggplot(df_rs, aes(x = Date, y = Value, color = Category, group = Category)) +
  geom_line() +
  geom_text_repel(
    aes(label = Category), data = data_ends, nudge_x = 0.35, size = 3
    ) + 
  labs(title = "Labor Market of Luxembourg",x=NULL, y=NULL) + 
  theme(legend.position = "none")
```

## Small Multiples

```{r}
df_rs |>
  ggplot(aes(x = as.factor(Date), y = Value, colour = Category)) + 
  geom_line(aes( group = Category)) +
  labs(title = "Labor Market of Luxembourg",
       subtitle = "x axis: Date(Monthly)",
       fill = NULL,
       x = NULL,
       y = NULL) +
  facet_wrap(vars(Category), nrow = 4, scales = "free_y") +
  theme(legend.position = "none", 
        text = element_text(size = 13))
```

# Insights

## Unemployment Rates

Unemployment rates = Number of unemployment / Active population

```{r}
# Calculate Unemployment rates
df_ur <- data.frame(
  Category = rep("Unemployment rate", 344),
  Date = df_rs[1:344, 2],
  Value = df_rs |> 
    filter(Category == "Number of unemployed") |>
    select(Value) / df_rs |>
    filter(Category == "Active population") |>
    select(Value)
)

df_rs <- rbind(df_rs, df_ur)

# Plot of Unemployment rate
df_rs |> 
  filter(Category == "Unemployment rate") |>
  ggplot(aes(x = Date, y = Value)) + 
  geom_line(color = "red") + 
  geom_smooth() + 
  labs(title = "Unemployment Rates of Luxembourg",
       x = NULL,
       y = NULL) +
  theme(legend.position = "none")


```

```{r}
df |> 
  ggplot(aes(x = Date)) + 
  geom_line(aes(y = `Number of unemployed`), color = "blue") + 
  geom_line(aes(y = `Active population` * 0.05), color = "red") + 
  labs(title = "Active Population & Number of Unemployed",
       x = NULL,
       y = NULL,
       color = NULL) + 
  scale_y_continuous(name = "Number of Unemployed", sec.axis = sec_axis(~.*20, name = "Active Population")) + 
  theme(legend.position = c(0.01, 0.99), legend.justification = c(0, 1))
```

## National Employment & Domestic Employment

Annual data is represented by the data captured at the end of December of each year.
```{r}
library(lubridate)
library(tidyr)

# Create a new data frame containing annual data.
df |>
  pivot_longer(
    cols = c(
      "Non-resident borderers",
      "National employment",
      "Domestic employment"
    ),
    names_to = "Categories",
    values_to = "Values"
  ) |>
  filter(month(Date) == 12) -> df_an

ggplot(df_an) +
  geom_col(aes(x = Date,
               y = Values,
               fill = Categories)) + 
  labs(title = "Proportion of annual National Employment, 1995-2023", 
       x = NULL,
       y = NULL,
       fill = NULL) + 
  theme(legend.position = c(0.01, 0.99), legend.justification = c(0, 1))
```

```{r}
mdl <- lm(`National employment` ~ `Domestic employment`, data = df)
slope <- coef(mdl)[2]

df |> 
  ggplot(aes(x = `Domestic employment`, y = `National employment`)) +
  geom_point(color = "red", size = 0.8) +
  geom_smooth(method = "lm", se = TRUE) +  # Add linear regression line
  annotate("text", x = max(df$`Domestic employment`) - 10000, y = max(df$`National employment`), 
           label = paste("Slope: ", round(slope, 3)),
           hjust = 1, vjust = 1) +
  labs(x = "Domestic employment",
       y = "National employment")
```

## Distribution

```{r}
# Box Plot
df$`Unemployment rate` <- df$`Number of unemployed` / df$`Active population`

df |> 
  ggplot(aes(x = cut(Date, breaks = "5 years"), y = `Unemployment rate`, group = cut(Date, breaks = "5 years"))) + 
  geom_boxplot() + 
  scale_x_discrete(labels = function(x) {
    interval_start <- as.Date(x, format = "%Y-%m-%d")
    interval_end <- interval_start + lubridate::years(5) - lubridate::days(1)
    sprintf("%s - %s", format(interval_start, "%Y"), format(interval_end, "%Y"))
  }) +
  labs(title = "Unemployment Rate in Luxembourg", 
       x = "Year Interval", 
       y = "Unemployment Rate")
```
This takes out the seasonal effects.